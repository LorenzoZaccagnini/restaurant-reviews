{"version":3,"sources":["main_bundle.js"],"names":["e","t","n","r","s","o","u","a","require","i","f","Error","code","l","exports","call","length","1","module","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","DBHelper","instance","TypeError","_classCallCheck","this","value","navigator","serviceWorker","Promise","resolve","callback","fetch","DATABASE_URL","credentials","then","res","json","data","catch","err","id","fetchRestaurants","error","restaurants","restaurant","find","cuisine","results","filter","cuisine_type","neighborhood","neighborhoods","map","v","uniqueNeighborhoods","indexOf","cuisines","uniqueCuisines","photograph","google","maps","Marker","position","latlng","title","name","url","urlForRestaurant","animation","Animation","DROP","get","2","obj","_dbhelper","_dbhelper2","__esModule","default","document","addEventListener","event","fetchNeighborhoods","fetchCuisines","console","self","fillNeighborhoodsHTML","arguments","undefined","select","getElementById","forEach","option","createElement","innerHTML","setAttribute","append","fillCuisinesHTML","window","initMap","Map","zoom","center","lat","lng","scrollwheel","updateRestaurants","cSelect","nSelect","cIndex","selectedIndex","nIndex","fetchRestaurantByCuisineAndNeighborhood","resetRestaurants","fillRestaurantsHTML","markers","m","setMap","ul","createRestaurantHTML","addMarkersToMap","li","image","className","src","imageUrlForRestaurant","alt","tabIndex","address","more","href","marker","mapMarkerForRestaurant","addListener","location","push","./dbhelper"],"mappings":"CAAY,SAASA,EAAEC,EAAEC,EAAEC,GAAG,SAASC,EAAEC,EAAEC,GAAG,IAAIJ,EAAEG,GAAG,CAAC,IAAIJ,EAAEI,GAAG,CAAC,IAAIE,EAAkB,mBAATC,SAAqBA,QAAQ,IAAIF,GAAGC,EAAE,OAAOA,EAAEF,GAAE,GAAI,GAAGI,EAAE,OAAOA,EAAEJ,GAAE,GAAI,IAAIK,EAAE,IAAIC,MAAM,uBAAuBN,EAAE,KAAK,MAAMK,EAAEE,KAAK,mBAAmBF,EAAE,IAAIG,EAAEX,EAAEG,IAAIS,YAAYb,EAAEI,GAAG,GAAGU,KAAKF,EAAEC,QAAQ,SAASd,GAAG,IAAIE,EAAED,EAAEI,GAAG,GAAGL,GAAG,OAAOI,EAAEF,GAAIF,IAAIa,EAAEA,EAAEC,QAAQd,EAAEC,EAAEC,EAAEC,GAAG,OAAOD,EAAEG,GAAGS,QAAkD,IAA1C,IAAIL,EAAkB,mBAATD,SAAqBA,QAAgBH,EAAE,EAAEA,EAAEF,EAAEa,OAAOX,IAAID,EAAED,EAAEE,IAAI,OAAOD,EAAlc,EAAkda,GAAG,SAAST,EAAQU,EAAOJ,GAC7e,aAEA,IAAIK,EAAe,WAAc,SAASC,EAAiBC,EAAQC,GAAS,IAAK,IAAIb,EAAI,EAAGA,EAAIa,EAAMN,OAAQP,IAAK,CAAE,IAAIc,EAAaD,EAAMb,GAAIc,EAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,UAAWF,IAAYA,EAAWG,UAAW,GAAMC,OAAOC,eAAeP,EAAQE,EAAWM,IAAKN,IAAiB,OAAO,SAAUO,EAAaC,EAAYC,GAAiJ,OAA9HD,GAAYX,EAAiBU,EAAYG,UAAWF,GAAiBC,GAAaZ,EAAiBU,EAAaE,GAAqBF,GAA7gB,IAOJ,WACb,SAASI,KANX,SAAyBC,EAAUL,GAAe,KAAMK,aAAoBL,GAAgB,MAAM,IAAIM,UAAU,qCAO5GC,CAAgBC,KAAMJ,GAGxBf,EAAae,IACXL,IAAK,eACLU,MAAO,WACL,IAAKC,UAAUC,cACb,OAAOC,QAAQC,eASnBd,IAAK,mBAMLU,MAAO,SAA0BK,GAC/BC,MAAMX,EAASY,cAAgBC,YAAa,gBAAiBC,KAAK,SAAUC,GAC1E,OAAOA,EAAIC,SACVF,KAAK,SAAUG,GAChB,OAAOP,EAAS,KAAMO,KACrBC,MAAM,SAAUC,GACjB,OAAOT,EAASS,EAAK,WAsBzBxB,IAAK,sBACLU,MAAO,SAA6Be,EAAIV,GAEtCV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CACL,IAAIE,EAAaD,EAAYE,KAAK,SAAUxD,GAC1C,OAAOA,EAAEmD,IAAMA,IAEbI,EAEFd,EAAS,KAAMc,GAGfd,EAAS,4BAA6B,YAW9Cf,IAAK,2BACLU,MAAO,SAAkCqB,EAAShB,GAEhDV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CAEL,IAAIK,EAAUJ,EAAYK,OAAO,SAAU3D,GACzC,OAAOA,EAAE4D,cAAgBH,IAE3BhB,EAAS,KAAMiB,SAUrBhC,IAAK,gCACLU,MAAO,SAAuCyB,EAAcpB,GAE1DV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CAEL,IAAIK,EAAUJ,EAAYK,OAAO,SAAU3D,GACzC,OAAOA,EAAE6D,cAAgBA,IAE3BpB,EAAS,KAAMiB,SAUrBhC,IAAK,0CACLU,MAAO,SAAiDqB,EAASI,EAAcpB,GAE7EV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CACL,IAAIK,EAAUJ,EACC,OAAXG,IAEFC,EAAUA,EAAQC,OAAO,SAAU3D,GACjC,OAAOA,EAAE4D,cAAgBH,KAGT,OAAhBI,IAEFH,EAAUA,EAAQC,OAAO,SAAU3D,GACjC,OAAOA,EAAE6D,cAAgBA,KAG7BpB,EAAS,KAAMiB,SAUrBhC,IAAK,qBACLU,MAAO,SAA4BK,GAEjCV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CAEL,IAAIS,EAAgBR,EAAYS,IAAI,SAAUC,EAAG1D,GAC/C,OAAOgD,EAAYhD,GAAGuD,eAGpBI,EAAsBH,EAAcH,OAAO,SAAUK,EAAG1D,GAC1D,OAAOwD,EAAcI,QAAQF,IAAM1D,IAErCmC,EAAS,KAAMwB,SAUrBvC,IAAK,gBACLU,MAAO,SAAuBK,GAE5BV,EAASqB,iBAAiB,SAAUC,EAAOC,GACzC,GAAID,EACFZ,EAASY,EAAO,UACX,CAEL,IAAIc,EAAWb,EAAYS,IAAI,SAAUC,EAAG1D,GAC1C,OAAOgD,EAAYhD,GAAGsD,eAGpBQ,EAAiBD,EAASR,OAAO,SAAUK,EAAG1D,GAChD,OAAO6D,EAASD,QAAQF,IAAM1D,IAEhCmC,EAAS,KAAM2B,SAUrB1C,IAAK,mBACLU,MAAO,SAA0BmB,GAC/B,MAAO,wBAA0BA,EAAWJ,MAQ9CzB,IAAK,wBACLU,MAAO,SAA+BmB,GACpC,MAAO,QAAUA,EAAWc,WAAa,UAQ3C3C,IAAK,yBACLU,MAAO,SAAgCmB,EAAYQ,GAOjD,OANa,IAAIO,OAAOC,KAAKC,QAC3BC,SAAUlB,EAAWmB,OACrBC,MAAOpB,EAAWqB,KAClBC,IAAK9C,EAAS+C,iBAAiBvB,GAC/BQ,IAAKA,EACLgB,UAAWT,OAAOC,KAAKS,UAAUC,UAIrCvD,IAAK,eACLwD,IAAK,WAEH,MAAO,wCA1OE,QAiPTC,GAAG,SAAS9E,EAAQU,EAAOJ,GACjC,aAEA,IAIgCyE,EAJ5BC,EAAYhF,EAAQ,cAEpBiF,GAE4BF,EAFQC,IAEaD,EAAIG,WAAaH,GAAQI,QAASJ,GAWvFK,SAASC,iBAAiB,mBAAoB,SAAUC,GACtDC,IACAC,MAMF,IAAID,EAAqB,WACvBN,EAAWE,QAAQI,mBAAmB,SAAUvC,EAAOS,GACjDT,EAEFyC,QAAQzC,MAAMA,IAEd0C,KAAKjC,cAAgBA,EACrBkC,QAQFA,EAAwB,WAC1B,IAAIlC,EAAmC,EAAnBmC,UAAUpF,aAA+BqF,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAKjC,cAEzFqC,EAASV,SAASW,eAAe,wBAErCtC,EAAcuC,QAAQ,SAAUxC,EAAcvD,GAC5C,IAAIgG,EAASb,SAASc,cAAc,UACpCD,EAAOE,UAAY3C,EACnByC,EAAOlE,MAAQyB,EACfyC,EAAOG,aAAa,OAAQ,UAC5BH,EAAOG,aAAa,gBAAiBnG,EAAI,GACzCgG,EAAOG,aAAa,eAAgB3C,EAAcjD,QAClDsF,EAAOO,OAAOJ,MAOdT,EAAgB,WAClBP,EAAWE,QAAQK,cAAc,SAAUxC,EAAOc,GAC5Cd,EAEFyC,QAAQzC,MAAMA,IAEd0C,KAAK5B,SAAWA,EAChBwC,QAQFA,EAAmB,WACrB,IAAIxC,EAA8B,EAAnB8B,UAAUpF,aAA+BqF,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAK5B,SAEpFgC,EAASV,SAASW,eAAe,mBAErCjC,EAASkC,QAAQ,SAAU5C,EAASnD,GAClC,IAAIgG,EAASb,SAASc,cAAc,UACpCD,EAAOE,UAAY/C,EACnB6C,EAAOlE,MAAQqB,EACf6C,EAAOG,aAAa,OAAQ,UAC5BH,EAAOG,aAAa,gBAAiBnG,EAAI,GACzCgG,EAAOG,aAAa,eAAgBtC,EAAStD,QAC7CsF,EAAOO,OAAOJ,MAOlBM,OAAOC,QAAU,WAKfd,KAAKhC,IAAM,IAAIO,OAAOC,KAAKuC,IAAIrB,SAASW,eAAe,QACrDW,KAAM,GACNC,QALAC,IAAK,UACLC,KAAM,WAKNC,aAAa,IAEfC,KAMF,IAAIA,EAAoB,WACtB,IAAIC,EAAU5B,SAASW,eAAe,mBAClCkB,EAAU7B,SAASW,eAAe,wBAElCmB,EAASF,EAAQG,cACjBC,EAASH,EAAQE,cAEjB/D,EAAU4D,EAAQE,GAAQnF,MAC1ByB,EAAeyD,EAAQG,GAAQrF,MAEnCkD,EAAWE,QAAQkC,wCAAwCjE,EAASI,EAAc,SAAUR,EAAOC,GAC7FD,EAEFyC,QAAQzC,MAAMA,IAEdsE,EAAiBrE,GACjBsE,QAQFD,EAAmB,SAA0BrE,GAE/CyC,KAAKzC,eACImC,SAASW,eAAe,oBAC9BI,UAAY,GAGfT,KAAK8B,QAAQxB,QAAQ,SAAUyB,GAC7B,OAAOA,EAAEC,OAAO,QAElBhC,KAAK8B,WACL9B,KAAKzC,YAAcA,GAMjBsE,EAAsB,WACxB,IAAItE,EAAiC,EAAnB2C,UAAUpF,aAA+BqF,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAKzC,YAEvF0E,EAAKvC,SAASW,eAAe,oBACjC9C,EAAY+C,QAAQ,SAAU9C,GAC5ByE,EAAGtB,OAAOuB,EAAqB1E,MAEjC2E,KAMED,EAAuB,SAA8B1E,GACvD,IAAI4E,EAAK1C,SAASc,cAAc,MAChC4B,EAAG1B,aAAa,OAAQ,YAExB,IAAI2B,EAAQ3C,SAASc,cAAc,OACnC6B,EAAMC,UAAY,iBAClBD,EAAME,IAAMhD,EAAWE,QAAQ+C,sBAAsBhF,GACrD6E,EAAMI,IAAMjF,EAAWqB,KAAO,uBAC9BuD,EAAGzB,OAAO0B,GAEV,IAAIxD,EAAOa,SAASc,cAAc,MAClC3B,EAAK4B,UAAYjD,EAAWqB,KAC5BA,EAAK6D,SAAW,EAChB7D,EAAK6B,aAAa,aAAclD,EAAWqB,KAAO,MAAQrB,EAAWM,cACrEsE,EAAGzB,OAAO9B,GAEV,IAAIf,EAAe4B,SAASc,cAAc,KAC1C1C,EAAa2C,UAAYjD,EAAWM,aACpCsE,EAAGzB,OAAO7C,GAEV,IAAI6E,EAAUjD,SAASc,cAAc,KACrCmC,EAAQlC,UAAYjD,EAAWmF,QAC/BP,EAAGzB,OAAOgC,GAEV,IAAIC,EAAOlD,SAASc,cAAc,KAMlC,OALAoC,EAAKnC,UAAY,eACjBmC,EAAKC,KAAOtD,EAAWE,QAAQV,iBAAiBvB,GAChDoF,EAAKlC,aAAa,aAAc,mBAAqBlD,EAAWqB,KAAO,iBACvEuD,EAAGzB,OAAOiC,GAEHR,GAMLD,EAAkB,YACiB,EAAnBjC,UAAUpF,aAA+BqF,IAAjBD,UAAU,GAAmBA,UAAU,GAAKF,KAAKzC,aAE/E+C,QAAQ,SAAU9C,GAE5B,IAAIsF,EAASvD,EAAWE,QAAQsD,uBAAuBvF,EAAYwC,KAAKhC,KACxEO,OAAOC,KAAKoB,MAAMoD,YAAYF,EAAQ,QAAS,WAC7CjC,OAAOoC,SAASJ,KAAOC,EAAOhE,MAEhCkB,KAAK8B,QAAQoB,KAAKJ,QAInBK,aAAa,SAAS,EAAE","file":"../main_bundle.js","sourcesContent":["(function(){function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s}return e})()({1:[function(require,module,exports){\n'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\r\n * Common database helper functions.\r\n */\nvar DBHelper = function () {\n  function DBHelper() {\n    _classCallCheck(this, DBHelper);\n  }\n\n  _createClass(DBHelper, [{\n    key: 'openDatabase',\n    value: function openDatabase() {\n      if (!navigator.serviceWorker) {\n        return Promise.resolve();\n      }\n    }\n    /**\r\n     * Database URL.\r\n     * Change this to restaurants.json file location on your server.\r\n     */\n\n  }], [{\n    key: 'fetchRestaurants',\n\n\n    /**\r\n     * Fetch all restaurants.\r\n     */\n    value: function fetchRestaurants(callback) {\n      fetch(DBHelper.DATABASE_URL, { credentials: 'same-origin' }).then(function (res) {\n        return res.json();\n      }).then(function (data) {\n        return callback(null, data);\n      }).catch(function (err) {\n        return callback(err, null);\n      });\n      /*let xhr = new XMLHttpRequest();\r\n      xhr.open('GET', DBHelper.DATABASE_URL);\r\n      xhr.onload = () => {\r\n        if (xhr.status === 200) { // Got a success response from server!\r\n          //const json = JSON.parse(xhr.responseText);\r\n          const restaurants = JSON.parse(xhr.responseText);//json.restaurants;\r\n          callback(null, restaurants);\r\n        } else { // Oops!. Got an error from server.\r\n          const error = (`Request failed. Returned status of ${xhr.status}`);\r\n          callback(error, null);\r\n        }\r\n      };\r\n      xhr.send();*/\n    }\n\n    /**\r\n     * Fetch a restaurant by its ID.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantById',\n    value: function fetchRestaurantById(id, callback) {\n      // fetch all restaurants with proper error handling.\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var restaurant = restaurants.find(function (r) {\n            return r.id == id;\n          });\n          if (restaurant) {\n            // Got the restaurant\n            callback(null, restaurant);\n          } else {\n            // Restaurant does not exist in the database\n            callback('Restaurant does not exist', null);\n          }\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine type with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisine',\n    value: function fetchRestaurantByCuisine(cuisine, callback) {\n      // Fetch all restaurants  with proper error handling\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given cuisine type\n          var results = restaurants.filter(function (r) {\n            return r.cuisine_type == cuisine;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByNeighborhood',\n    value: function fetchRestaurantByNeighborhood(neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Filter restaurants to have only given neighborhood\n          var results = restaurants.filter(function (r) {\n            return r.neighborhood == neighborhood;\n          });\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch restaurants by a cuisine and a neighborhood with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchRestaurantByCuisineAndNeighborhood',\n    value: function fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          var results = restaurants;\n          if (cuisine != 'all') {\n            // filter by cuisine\n            results = results.filter(function (r) {\n              return r.cuisine_type == cuisine;\n            });\n          }\n          if (neighborhood != 'all') {\n            // filter by neighborhood\n            results = results.filter(function (r) {\n              return r.neighborhood == neighborhood;\n            });\n          }\n          callback(null, results);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all neighborhoods with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchNeighborhoods',\n    value: function fetchNeighborhoods(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all neighborhoods from all restaurants\n          var neighborhoods = restaurants.map(function (v, i) {\n            return restaurants[i].neighborhood;\n          });\n          // Remove duplicates from neighborhoods\n          var uniqueNeighborhoods = neighborhoods.filter(function (v, i) {\n            return neighborhoods.indexOf(v) == i;\n          });\n          callback(null, uniqueNeighborhoods);\n        }\n      });\n    }\n\n    /**\r\n     * Fetch all cuisines with proper error handling.\r\n     */\n\n  }, {\n    key: 'fetchCuisines',\n    value: function fetchCuisines(callback) {\n      // Fetch all restaurants\n      DBHelper.fetchRestaurants(function (error, restaurants) {\n        if (error) {\n          callback(error, null);\n        } else {\n          // Get all cuisines from all restaurants\n          var cuisines = restaurants.map(function (v, i) {\n            return restaurants[i].cuisine_type;\n          });\n          // Remove duplicates from cuisines\n          var uniqueCuisines = cuisines.filter(function (v, i) {\n            return cuisines.indexOf(v) == i;\n          });\n          callback(null, uniqueCuisines);\n        }\n      });\n    }\n\n    /**\r\n     * Restaurant page URL.\r\n     */\n\n  }, {\n    key: 'urlForRestaurant',\n    value: function urlForRestaurant(restaurant) {\n      return './restaurant.html?id=' + restaurant.id;\n    }\n\n    /**\r\n     * Restaurant image URL.\r\n     */\n\n  }, {\n    key: 'imageUrlForRestaurant',\n    value: function imageUrlForRestaurant(restaurant) {\n      return '/img/' + restaurant.photograph + '.jpg';\n    }\n\n    /**\r\n     * Map marker for a restaurant.\r\n     */\n\n  }, {\n    key: 'mapMarkerForRestaurant',\n    value: function mapMarkerForRestaurant(restaurant, map) {\n      var marker = new google.maps.Marker({\n        position: restaurant.latlng,\n        title: restaurant.name,\n        url: DBHelper.urlForRestaurant(restaurant),\n        map: map,\n        animation: google.maps.Animation.DROP });\n      return marker;\n    }\n  }, {\n    key: 'DATABASE_URL',\n    get: function get() {\n      var port = 1337; // Change this to your server port\n      return 'http://localhost:' + port + '/restaurants';\n    }\n  }]);\n\n  return DBHelper;\n}();\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\nvar _dbhelper = require('./dbhelper');\n\nvar _dbhelper2 = _interopRequireDefault(_dbhelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// let restaurants,\n//   neighborhoods,\n//   cuisines\n// var map\n// var markers = []\n// var dbhelper;\n/**\r\n * Fetch neighborhoods and cuisines as soon as the page is loaded.\r\n */\ndocument.addEventListener('DOMContentLoaded', function (event) {\n  fetchNeighborhoods();\n  fetchCuisines();\n});\n\n/**\r\n * Fetch all neighborhoods and set their HTML.\r\n */\nvar fetchNeighborhoods = function fetchNeighborhoods() {\n  _dbhelper2.default.fetchNeighborhoods(function (error, neighborhoods) {\n    if (error) {\n      // Got an error\n      console.error(error);\n    } else {\n      self.neighborhoods = neighborhoods;\n      fillNeighborhoodsHTML();\n    }\n  });\n};\n\n/**\r\n * Set neighborhoods HTML.\r\n */\nvar fillNeighborhoodsHTML = function fillNeighborhoodsHTML() {\n  var neighborhoods = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.neighborhoods;\n\n  var select = document.getElementById('neighborhoods-select');\n\n  neighborhoods.forEach(function (neighborhood, i) {\n    var option = document.createElement('option');\n    option.innerHTML = neighborhood;\n    option.value = neighborhood;\n    option.setAttribute(\"role\", \"option\");\n    option.setAttribute(\"aria-posinset\", i + 1);\n    option.setAttribute(\"aria-setsize\", neighborhoods.length);\n    select.append(option);\n  });\n};\n\n/**\r\n * Fetch all cuisines and set their HTML.\r\n */\nvar fetchCuisines = function fetchCuisines() {\n  _dbhelper2.default.fetchCuisines(function (error, cuisines) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      self.cuisines = cuisines;\n      fillCuisinesHTML();\n    }\n  });\n};\n\n/**\r\n * Set cuisines HTML.\r\n */\nvar fillCuisinesHTML = function fillCuisinesHTML() {\n  var cuisines = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.cuisines;\n\n  var select = document.getElementById('cuisines-select');\n\n  cuisines.forEach(function (cuisine, i) {\n    var option = document.createElement('option');\n    option.innerHTML = cuisine;\n    option.value = cuisine;\n    option.setAttribute(\"role\", \"option\");\n    option.setAttribute(\"aria-posinset\", i + 1);\n    option.setAttribute(\"aria-setsize\", cuisines.length);\n    select.append(option);\n  });\n};\n\n/**\r\n * Initialize Google map, called from HTML.\r\n */\nwindow.initMap = function () {\n  var loc = {\n    lat: 40.722216,\n    lng: -73.987501\n  };\n  self.map = new google.maps.Map(document.getElementById('map'), {\n    zoom: 12,\n    center: loc,\n    scrollwheel: false\n  });\n  updateRestaurants();\n};\n\n/**\r\n * Update page and map for current restaurants.\r\n */\nvar updateRestaurants = function updateRestaurants() {\n  var cSelect = document.getElementById('cuisines-select');\n  var nSelect = document.getElementById('neighborhoods-select');\n\n  var cIndex = cSelect.selectedIndex;\n  var nIndex = nSelect.selectedIndex;\n\n  var cuisine = cSelect[cIndex].value;\n  var neighborhood = nSelect[nIndex].value;\n\n  _dbhelper2.default.fetchRestaurantByCuisineAndNeighborhood(cuisine, neighborhood, function (error, restaurants) {\n    if (error) {\n      // Got an error!\n      console.error(error);\n    } else {\n      resetRestaurants(restaurants);\n      fillRestaurantsHTML();\n    }\n  });\n};\n\n/**\r\n * Clear current restaurants, their HTML and remove their map markers.\r\n */\nvar resetRestaurants = function resetRestaurants(restaurants) {\n  // Remove all restaurants\n  self.restaurants = [];\n  var ul = document.getElementById('restaurants-list');\n  ul.innerHTML = '';\n\n  // Remove all map markers\n  self.markers.forEach(function (m) {\n    return m.setMap(null);\n  });\n  self.markers = [];\n  self.restaurants = restaurants;\n};\n\n/**\r\n * Create all restaurants HTML and add them to the webpage.\r\n */\nvar fillRestaurantsHTML = function fillRestaurantsHTML() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  var ul = document.getElementById('restaurants-list');\n  restaurants.forEach(function (restaurant) {\n    ul.append(createRestaurantHTML(restaurant));\n  });\n  addMarkersToMap();\n};\n\n/**\r\n * Create restaurant HTML.\r\n */\nvar createRestaurantHTML = function createRestaurantHTML(restaurant) {\n  var li = document.createElement('li');\n  li.setAttribute(\"role\", \"listitem\");\n\n  var image = document.createElement('img');\n  image.className = 'restaurant-img';\n  image.src = _dbhelper2.default.imageUrlForRestaurant(restaurant);\n  image.alt = restaurant.name + \" restaurant's photo.\";\n  li.append(image);\n\n  var name = document.createElement('h2');\n  name.innerHTML = restaurant.name;\n  name.tabIndex = 0;\n  name.setAttribute('aria-label', restaurant.name + ' , ' + restaurant.neighborhood);\n  li.append(name);\n\n  var neighborhood = document.createElement('p');\n  neighborhood.innerHTML = restaurant.neighborhood;\n  li.append(neighborhood);\n\n  var address = document.createElement('p');\n  address.innerHTML = restaurant.address;\n  li.append(address);\n\n  var more = document.createElement('a');\n  more.innerHTML = 'View Details';\n  more.href = _dbhelper2.default.urlForRestaurant(restaurant);\n  more.setAttribute(\"aria-label\", 'View details of ' + restaurant.name + '\\'s restaurant');\n  li.append(more);\n\n  return li;\n};\n\n/**\r\n * Add markers for current restaurants to the map.\r\n */\nvar addMarkersToMap = function addMarkersToMap() {\n  var restaurants = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : self.restaurants;\n\n  restaurants.forEach(function (restaurant) {\n    // Add marker to the map\n    var marker = _dbhelper2.default.mapMarkerForRestaurant(restaurant, self.map);\n    google.maps.event.addListener(marker, 'click', function () {\n      window.location.href = marker.url;\n    });\n    self.markers.push(marker);\n  });\n};\n\n},{\"./dbhelper\":1}]},{},[2,1]);\n"]}